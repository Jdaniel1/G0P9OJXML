package DomModifyG0P9OJ;

import java.io.File;
import java.io.IOException;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

public class DomModifyG0P9OJ {
   public DomModifyG0P9OJ() {
   }

   public static void main(String[] var0) throws ParserConfigurationException, SAXException, IOException, TransformerException {
      File file = new File("XMLG0P9OJ.xml");
      DocumentBuilderFactory doc = DocumentBuilderFactory.newInstance();
      DocumentBuilder docBuilder = doc.newDocumentBuilder();
      Document parseFile = docBuilder.parse(file);
      parseFile.getDocumentElement().normalize();
      Node elements = parseFile.getElementsByTagName("munkagep").item(1);
      NamedNodeMap attributes = elements.getAttributes();
      Node getSzam = attributes.getNamedItem("rendszam");
      getSzam.setTextContent("AA-BB-123");
      System.out.println("munkagep attributum modositva");
      Node nodeVar = parseFile.getElementsByTagName("tulajdonos").item(0);
      attributes = nodeVar.getAttributes();
      getSzam = attributes.getNamedItem("jogositvany_szama");
      getSzam.setTextContent("BB112233");
      System.out.println("tulajdonos attributum modositva");
      NodeList nodeList1 = parseFile.getElementsByTagName("karosszeria");

      int i;
      Node nodeVar1;
      NodeList nodeListVar;
      int k;
      Node seged;
      for(i = 0; i < nodeList1.getLength(); ++i) {
         nodeVar1 = nodeList1.item(i);
         if (nodeVar1.getNodeType() == 1) {
            nodeListVar = nodeVar1.getChildNodes();

            for(k = 0; k < nodeListVar.getLength(); ++k) {
               seged = nodeListVar.item(k);
               if (seged.getNodeName().equals("engedely")) {
                  seged.setTextContent("van");
               }
            }
         }
      }
      System.out.println("engedely modositasok kesz");


      nodeList1 = parseFile.getElementsByTagName("motor");

      for(i = 0; i < nodeList1.getLength(); ++i) {
         nodeVar1 = nodeList1.item(i);
         if (nodeVar1.getNodeType() == 1) {
            nodeListVar = nodeVar1.getChildNodes();

            for(k = 0; k < nodeListVar.getLength(); ++k) {
               seged = nodeListVar.item(k);
               if (seged.getNodeName().equals("meghajtas") && seged.getTextContent().equals("benzin")) {
                  seged.setTextContent("dizel");
               }
            }
         }
      }
      System.out.println("benzin motorok atallitva dizelre");


      nodeList1 = parseFile.getElementsByTagName("evszam");

      for(i = 0; i < nodeList1.getLength(); ++i) {
         parseFile.renameNode(nodeList1.item(i), (String)null, "evjarat");
      }
      System.out.println("evszam atnevezeve evjaratra");


      nodeList1 = parseFile.getElementsByTagName("birtoklas_kezdete");

      for(i = 0; i < nodeList1.getLength(); ++i) {
         nodeVar1 = nodeList1.item(i);
         if (nodeVar1.getNodeType() == 1) {
            nodeVar1.setTextContent(decrementYear(nodeVar1.getTextContent()));
         }
      }
      System.out.println("birtoklas_kezdete modositasa kesz");


      writeXml(parseFile, new File("XMLG0P9OJModify.xml"));
   }


   private static void writeXml(Document var0, File var1) throws TransformerException {
      Transformer var2 = TransformerFactory.newInstance().newTransformer();
      DOMSource var3 = new DOMSource(var0);
      StreamResult var4 = new StreamResult(var1);
      var2.transform(var3, var4);
   }


   private static String decrementYear(String var0) {
      int var1 = Integer.parseInt(var0.substring(0, 4)) - 1;
      String var2 = var0.substring(4);
      return "" + var1 + var2;
   }
}
