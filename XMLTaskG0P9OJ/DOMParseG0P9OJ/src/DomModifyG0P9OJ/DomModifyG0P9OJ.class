// Source code is decompiled from a .class file using FernFlower decompiler.
package DomModifyG0P9OJ;

import java.io.File;
import java.io.IOException;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

public class DomModifyG0P9OJ {
   public DomModifyG0P9OJ() {
   }

   public static void main(String[] var0) throws ParserConfigurationException, SAXException, IOException, TransformerException {
      File var1 = new File("XMLG0P9OJ.xml");
      DocumentBuilderFactory var2 = DocumentBuilderFactory.newInstance();
      DocumentBuilder var3 = var2.newDocumentBuilder();
      Document var4 = var3.parse(var1);
      var4.getDocumentElement().normalize();
      Node var5 = var4.getElementsByTagName("szemelygepjarmu").item(1);
      NamedNodeMap var6 = var5.getAttributes();
      Node var7 = var6.getNamedItem("rendszam");
      var7.setTextContent("MM-AB-123");
      System.out.println("szemelygepjarmu attributum modositva");
      Node var8 = var4.getElementsByTagName("tulajdonos").item(0);
      var6 = var8.getAttributes();
      var7 = var6.getNamedItem("jogositvany_szama");
      var7.setTextContent("FR346544");
      System.out.println("tulajdonos attributum modositva");
      NodeList var9 = var4.getElementsByTagName("karosszeria");

      int var10;
      Node var11;
      NodeList var12;
      int var13;
      Node var14;
      for(var10 = 0; var10 < var9.getLength(); ++var10) {
         var11 = var9.item(var10);
         if (var11.getNodeType() == 1) {
            var12 = var11.getChildNodes();

            for(var13 = 0; var13 < var12.getLength(); ++var13) {
               var14 = var12.item(var13);
               if (var14.getNodeName().equals("matrica")) {
                  var14.setTextContent("van");
               }
            }
         }
      }

      System.out.println("matrica modositasok kesz");
      var9 = var4.getElementsByTagName("motor");

      for(var10 = 0; var10 < var9.getLength(); ++var10) {
         var11 = var9.item(var10);
         if (var11.getNodeType() == 1) {
            var12 = var11.getChildNodes();

            for(var13 = 0; var13 < var12.getLength(); ++var13) {
               var14 = var12.item(var13);
               if (var14.getNodeName().equals("uzemanyag") && var14.getTextContent().equals("benzin")) {
                  var14.setTextContent("hibrid");
               }
            }
         }
      }

      System.out.println("benzin motorok atallitva hibridre");
      var9 = var4.getElementsByTagName("gyartasi_ev");

      for(var10 = 0; var10 < var9.getLength(); ++var10) {
         var4.renameNode(var9.item(var10), (String)null, "evjarat");
      }

      System.out.println("gyartasi_ev atnevezeve evjaratra");
      var9 = var4.getElementsByTagName("birtoklas_kezdete");

      for(var10 = 0; var10 < var9.getLength(); ++var10) {
         var11 = var9.item(var10);
         if (var11.getNodeType() == 1) {
            var11.setTextContent(decrementYear(var11.getTextContent()));
         }
      }

      System.out.println("birtoklas_kezdete modositasa kesz");
      writeXml(var4, new File("XMLG0P9OJModify.xml"));
   }

   private static void writeXml(Document var0, File var1) throws TransformerException {
      Transformer var2 = TransformerFactory.newInstance().newTransformer();
      DOMSource var3 = new DOMSource(var0);
      StreamResult var4 = new StreamResult(var1);
      var2.transform(var3, var4);
   }

   private static String decrementYear(String var0) {
      int var1 = Integer.parseInt(var0.substring(0, 4)) - 1;
      String var2 = var0.substring(4);
      return "" + var1 + var2;
   }
}
